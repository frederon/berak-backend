def encrypt(bytes, key):
    res = "".join([chr((bytes[i] + ord(key[i % len(key)])) % 256)
                   for i in range(len(bytes))]).encode()
    print(res)
    print(type(res))
    return res


def encrypt_extended_vigenere(data, key):
    key = key.encode()
    key_len = len(key)
    key_index = 0
    encrypted_data = bytearray()
    for i in range(len(data)):
        key_byte = key[key_index % key_len]
        encrypted_data.append((data[i] + key_byte) % 256)
        key_index += 1
    return bytes(encrypted_data)


def decrypt_extended_vigenere(encrypted_data, key):
    key = key.encode()
    key_len = len(key)
    key_index = 0
    decrypted_data = bytearray()
    for i in range(len(encrypted_data)):
        key_byte = key[key_index % key_len]
        decrypted_data.append((encrypted_data[i] - key_byte) % 256)
        key_index += 1
    return bytes(decrypted_data)


def decrypt(bytes, key):
    res = "".join([chr((bytes[i] - ord(key[i % len(key)]) + 256) % 256)
                   for i in range(len(bytes))]).encode()
    print(res)
    print(type(res))
    return res


# tes = b'\xae\xb4\xc7\xbe\xb9y\xace\x96k\xa0fUeyxu\x87}z\x85ku\x85ku\x87}z\x85XOyku\x87}z\x85ku\x85ku\x87}z\x85XOykr\x89yv\x91we\x89yy\x8e\x80qy{s\x8b{qfUey{s\x8a\x83qy{s\x8d\x80z\x85ku\x87}u\x85XOykr\x89yw\x8ewe\x89we\x86{s\x8b\x80qfUey{s\x8b\x80qy{qyxu\x87}z\x85XOykr\x89yw\x8ewe\x89y{\x90\x80qyxu\x87}z\x85XOyku\x87}z\x85ku\x87\x81|\x8ewe\x86{s\x8b\x80qfU\xa2fURc\xae\xb4\xc7\xbe\xb9y\xbd\xaa\xcc\xc0\xb1\xcdk\x82y\xa6Rcke\x88ze\xbf\xbd\xb4\xc7\xbfRcke\xba\xa6uyue\x8c\xa8qy\xac\xa0\x89koy~py|\xa2\x85k\xa6\xb4{e\x83kxyve\x8b\xa8qfUey\xac\xa0\x8akoy~\xa2\x85k\xa6\xb4|e\x83kx\x84kv\xb6we\xba\xa6vyue\x8ckpy}\xa2\x85XOyk\xa6\xb4~e\x83kx\xb6we\xba\xa6xyue\x8cve\x8a\xa8qy\xac\xa0\x8ckoy~e\x84kw\xb6wRcke\xba\xa6wyue\x8c\xa8qy\xac\xa0\x8bkoy~py|\xa2\x85k\xa6\xb4}e\x83kxyve\x8b\xa8qfURcke\x88ze\xbb\xac\xa8\xc4XOyk\xa6\xb4\x7fe\x83kx\xb6we\xba\xa6yyue\x8cve\x8a\xa8qy\xac\xa0\x8dkoy~e\x84kw\xb6wRcke\xba\xa6zyue\x8c\xa8qy\xac\xa0\x8ekoy~py|\xa2\x85k\xa6\xb4\x80e\x83kxyve\x8b\xa8qfUey\xac\xa0\x90koy~\xa2\x85k\xa6\xb4\x82e\x83kx\x84kv\xb6we\xba\xa6|yue\x8ckpy}\xa2\x85XOyk\xa6\xb4\x81e\x83kx\xb6we\xba\xa6{yue\x8cve\x8a\xa8qy\xac\xa0\x8fkoy~e\x84kw\xb6wRcXOykt\x88k\xb9\xc8\xbbRcke\xba\xa6{yue\x8c\xa8qy\xac\xa0\x8fkoy~py|\xa2\x85k\xa6\xb4\x81e\x83kxyve\x8b\xa8qfUey\xac\xa0\x8bkoy~\xa2\x85k\xa6\xb4}e\x83kx\x84kv\xb6we\xba\xa6wyue\x8ckpy}\xa2\x85XOyk\xa6\xb4~e\x83kx\xb6we\xba\xa6xyue\x8cve\x8a\xa8qy\xac\xa0\x8ckoy~e\x84kw\xb6wRcke\xba\xa6|yue\x8c\xa8qy\xac\xa0\x90koy~py|\xa2\x85k\xa6\xb4\x82e\x83kxyve\x8b\xa8qfURcke\x88ze\xbb\xba\xb9\xcd\xba\xb2fUey\xac\xa0\x8dkoy~\xa2\x85k\xa6\xb4\x7fe\x83kx\x84kv\xb6we\xba\xa6yyue\x8ckpy}\xa2\x85XOyk\xa6\xb4\x80e\x83kx\xb6we\xba\xa6zyue\x8cve\x8a\xa8qy\xac\xa0\x8ekoy~e\x84kw\xb6wRcke\xba\xa6vyue\x8c\xa8qy\xac\xa0\x8akoy~py|\xa2\x85k\xa6\xb4|e\x83kxyve\x8b\xa8qfUey\xac\xa0\x89koy~\xa2\x85k\xa6\xb4{e\x83kx\x84kv\xb6we\xba\xa6uyue\x8ckpy}\xa2\x85XOfUeyzty\xbd\xae\xc0\xb3\xb9fUey\xac\xa0\x8ekoy~\xa2\x85k\xa6\xb4\x80e\x83kx\x84kv\xb6we\xba\xa6zyue\x8ckpy}\xa2\x85XOyk\xa6\xb4|e\x83kx\xb6we\xba\xa6vyue\x8cve\x8a\xa8qy\xac\xa0\x8akoy~e\x84kw\xb6wRcke\xba\xa6xyue\x8c\xa8qy\xac\xa0\x8ckoy~py|\xa2\x85k\xa6\xb4~e\x83kxyve\x8b\xa8qfUey\xac\xa0\x90koy~\xa2\x85k\xa6\xb4\x82e\x83kx\x84kv\xb6we\xba\xa6|yue\x8ckpy}\xa2\x85XOfUeyzty\xb7\xaa\xbf\xbfRcke\xba\xa6yyue\x8c\xa8qy\xac\xa0\x8dkoy~py|\xa2\x85k\xa6\xb4\x7fe\x83kxyve\x8b\xa8qfUey\xac\xa0\x89koy~\xa2\x85k\xa6\xb4{e\x83kx\x84kv\xb6we\xba\xa6uyue\x8ckpy}\xa2\x85XOyk\xa6\xb4}e\x83kx\xb6we\xba\xa6wyue\x8cve\x8a\xa8qy\xac\xa0\x8bkoy~e\x84kw\xb6wRcke\xba\xa6{yue\x8c\xa8qy\xac\xa0\x8fkoy~e\x84kv\xb6we\xba\xa6{yue\x8ckpy}\xa2fU\xa2\x94XOfU\xa8\xc8\xb9\xb8\xc8\xb7\xaa\x87\xb7\xb4\xc0s\xb7\xbe\xbe\xba\xc5\xbfn'
# print(tes)

tes = encrypt_extended_vigenere(b"abc", "KEY")

print(decrypt_extended_vigenere(tes, "KEY"))
